---
// src/components/MapSection.astro
---

<section class="map-section" id="mapa">
    <div class="main-container">
      <!-- Sidebar -->
      <div class="sidebar">
        <!-- Filter Tabs -->
        <div class="filter-tabs">
          <button class="filter-tab active" data-category="hoteles">
            <svg class="filter-tab-icon" viewBox="0 0 24 24" fill="none">
              <path d="M3 9h18v11a1 1 0 0 1-1 1H4a1 1 0 0 1-1-1V9z" fill="currentColor"/>
              <path d="M12 3L3 9h18l-9-6z" fill="currentColor" opacity="0.7"/>
              <circle cx="8" cy="14" r="1" fill="#000"/>
              <circle cx="16" cy="14" r="1" fill="#000"/>
            </svg>
            Hoteles
          </button>
          <button class="filter-tab" data-category="departamentos">
            <svg class="filter-tab-icon" viewBox="0 0 24 24" fill="none">
              <rect x="3" y="4" width="18" height="16" rx="2" fill="currentColor"/>
              <rect x="6" y="8" width="3" height="4" fill="#000"/>
              <rect x="11" y="8" width="3" height="4" fill="#000"/>
              <rect x="15" y="8" width="3" height="4" fill="#000"/>
              <rect x="6" y="14" width="3" height="4" fill="#000"/>
              <rect x="11" y="14" width="3" height="4" fill="#000"/>
              <rect x="15" y="14" width="3" height="4" fill="#000"/>
            </svg>
            Apartamentos
          </button>
          <button class="filter-tab" data-category="hostales">
            <svg class="filter-tab-icon" viewBox="0 0 24 24" fill="none">
              <rect x="4" y="6" width="16" height="12" rx="1" fill="currentColor"/>
              <rect x="6" y="9" width="12" height="2" fill="#000"/>
              <rect x="6" y="13" width="12" height="2" fill="#000"/>
              <circle cx="8" cy="4" r="1" fill="currentColor"/>
              <circle cx="12" cy="4" r="1" fill="currentColor"/>
              <circle cx="16" cy="4" r="1" fill="currentColor"/>
            </svg>
            Hostales
          </button>
        </div>
  
        <!-- Accommodation List -->
        <div class="accommodation-list" id="accommodation-list">
          <div class="loading">
            <div class="spinner"></div>
          </div>
        </div>
      </div>
  
      <!-- Map Container -->
      <div class="map-container">
        <!-- Search Bar -->
        <div class="search-bar">
          <input type="text" class="search-input" placeholder="Buscar ubicaci√≥n...">
          <button class="search-btn">Buscar</button>
        </div>
  
        <!-- Map Controls -->
        <div class="map-controls">
          <button class="map-control-btn" id="toggle-style">üó∫Ô∏è</button>
          <button class="map-control-btn" id="center-map">üìç</button>
        </div>
  
        <!-- Map -->
        <div id="map"></div>
      </div>
    </div>
  </section>
  
  <style>
    .map-section {
      min-height: 100vh;
      background: #000;
    }
  
    .main-container {
      display: flex;
      height: 100vh;
    }
  
    /* Mobile First Approach */
    @media (max-width: 767px) {
      .map-section {
        height: 100vh;
        overflow: hidden;
      }
  
      .main-container {
        flex-direction: column;
        height: 100vh;
        position: relative;
      }
      
      .map-container {
        height: 40vh;
        order: 1;
        width: 100%;
        position: relative;
        background: #1a1a1a;
        min-height: 200px;
      }
      
      .sidebar {
        height: 60vh;
        order: 2;
        width: 100%;
        border-right: none;
        border-top: 1px solid #333;
        overflow-y: auto;
      }
  
      #map {
        width: 100% !important;
        height: 100% !important;
        position: relative !important;
        display: block !important;
        min-height: 200px !important;
      }
  
      .search-bar {
        position: absolute;
        top: 10px;
        left: 10px;
        width: 200px;
        z-index: 1000;
        background: rgba(0, 0, 0, 0.9);
        padding: 0.4rem;
        border-radius: 6px;
        border: 1px solid #333;
        display: flex;
        gap: 0.3rem;
        align-items: center;
      }
  
      .search-input {
        width: 80px;
        font-size: 0.7rem;
        padding: 0.3rem;
      }
      
      .search-btn {
        padding: 0.3rem 0.6rem;
        font-size: 0.7rem;
      }
  
      .map-controls {
        position: absolute;
        top: 10px;
        right: 10px;
        z-index: 1000;
        flex-direction: column;
        gap: 0.2rem;
      }
  
      .map-control-btn {
        padding: 0.4rem;
        font-size: 0.7rem;
        width: 35px;
        height: 35px;
      }
  
      .card-image {
        height: 12px;
      }
  
      .card-content {
        padding: 0.2rem;
      }
  
      .card-title {
        font-size: 0.6rem;
        margin-bottom: 0.15rem;
      }
  
      .card-amenities-icons {
        gap: 0.25rem;
        margin-bottom: 0.2rem;
      }
  
      .card-amenities-icons svg {
        width: 10px;
        height: 10px;
      }
  
      .card-footer {
        gap: 0.15rem;
      }
  
      .price {
        font-size: 0.6rem;
      }
  
      .card-buttons {
        gap: 0.2rem;
      }
  
      .directions-btn {
        width: 20px;
        height: 20px;
        font-size: 0.5rem;
      }
  
      .reserve-btn {
        padding: 0.2rem 0.4rem;
        font-size: 0.55rem;
        border-radius: 15px;
      }
  
      .accommodation-card {
        margin-bottom: 0.5rem;
      }
  
      .filter-tab {
        padding: 0.5rem 0.3rem;
        font-size: 0.7rem;
      }
  
      .filter-tab-icon {
        width: 1rem;
        height: 1rem;
      }
    }
  
    /* Sidebar */
    .sidebar {
      width: 420px;
      background: #111;
      border-right: 1px solid #333;
      overflow-y: auto;
      /* Hide scrollbar */
      scrollbar-width: none; /* Firefox */
      -ms-overflow-style: none; /* Internet Explorer 10+ */
    }
    
    .sidebar::-webkit-scrollbar {
      display: none; /* WebKit */
    }
  
    /* Filter Tabs */
    .filter-tabs {
      display: flex;
      background: #1a1a1a;
      border-bottom: 1px solid #333;
    }
  
    .filter-tab {
      flex: 1;
      padding: 1rem;
      text-align: center;
      background: none;
      border: none;
      color: #888;
      cursor: pointer;
      transition: all 0.3s ease;
      font-size: 0.9rem;
      position: relative;
    }
  
    .filter-tab.active {
      color: #0EA5E9;
      background: #222;
    }
  
    .filter-tab::after {
      content: '';
      position: absolute;
      bottom: 0;
      left: 0;
      width: 100%;
      height: 3px;
      background: #0EA5E9;
      transform: scaleX(0);
      transition: transform 0.3s ease;
    }
  
    .filter-tab.active::after {
      transform: scaleX(1);
    }
  
    .filter-tab-icon {
      width: 1.5rem;
      height: 1.5rem;
      margin-bottom: 0.3rem;
      display: block;
      margin-left: auto;
      margin-right: auto;
    }
  
    /* Accommodation Cards */
    .accommodation-list {
      padding: 1rem;
    }
  
    .accommodation-card {
      background: #1a1a1a;
      border-radius: 12px;
      margin-bottom: 1rem;
      overflow: hidden;
      border: 1px solid #333;
      transition: all 0.3s ease;
      cursor: pointer;
      position: relative;
    }
  
    .accommodation-card:hover {
      border-color: #0EA5E9;
      transform: translateY(-3px);
      box-shadow: 0 10px 25px rgba(14, 165, 233, 0.2);
    }
  
    .accommodation-card::before {
      content: '';
      position: absolute;
      top: 0;
      left: 0;
      right: 0;
      bottom: 0;
      background: linear-gradient(135deg, rgba(14, 165, 233, 0.1), rgba(255, 107, 53, 0.05));
      opacity: 0;
      transition: opacity 0.3s ease;
      z-index: 1;
      pointer-events: none;
    }
  
    .accommodation-card:hover::before {
      opacity: 1;
    }
  
    .card-content {
      position: relative;
      z-index: 2;
    }
  
    .card-image {
      width: 100%;
      height: 60px;
      object-fit: cover;
      display: block;
      border-radius: 8px 8px 0 0;
    }
  
    .card-content {
      padding: 1rem;
    }
  
    .card-header {
      display: flex;
      justify-content: space-between;
      align-items: flex-start;
      margin-bottom: 0.8rem;
    }
  
    .card-title {
      font-size: 1.1rem;
      font-weight: bold;
      color: #fff;
      margin: 0;
    }
  
    .card-rating {
      background: #0EA5E9;
      color: #fff;
      padding: 0.3rem 0.6rem;
      border-radius: 6px;
      font-size: 0.8rem;
      font-weight: bold;
    }
  
    .card-location {
      color: #888;
      font-size: 0.9rem;
      margin-bottom: 0.8rem;
      display: flex;
      align-items: center;
      gap: 0.3rem;
    }
  
    .card-amenities {
      display: flex;
      gap: 1rem;
      margin-bottom: 1rem;
      flex-wrap: wrap;
    }
  
    .amenity {
      display: flex;
      align-items: center;
      gap: 0.4rem;
      color: #ccc;
      font-size: 0.8rem;
    }
  
    .amenity-icon {
      display: inline-flex;
      align-items: center;
      color: #0EA5E9;
      margin-right: 0.3rem;
    }
  
    .amenity-icon svg {
      width: 16px;
      height: 16px;
    }
  
    .card-price {
      display: flex;
      justify-content: space-between;
      align-items: center;
      margin-top: 1rem;
      padding-top: 1rem;
      border-top: 1px solid #333;
    }
  
    .price {
      font-size: 1.2rem;
      font-weight: bold;
      color: #fff;
    }
  
    .price-per-night {
      color: #888;
      font-size: 0.8rem;
    }
  
    .reserve-btn {
      background: linear-gradient(45deg, #FF6B35, #FF8E53);
      color: #fff;
      border: none;
      padding: 0.7rem 1.5rem;
      border-radius: 25px;
      font-weight: bold;
      font-size: 0.9rem;
      cursor: pointer;
      transition: all 0.3s ease;
      text-decoration: none;
      display: inline-block;
      box-shadow: 0 2px 8px rgba(255, 107, 53, 0.3);
    }
  
    .reserve-btn:hover {
      transform: translateY(-2px);
      box-shadow: 0 8px 20px rgba(255, 107, 53, 0.4);
      background: linear-gradient(45deg, #FF8E53, #FFB366);
    }
  
    /* Map Container */
    .map-container {
      flex: 1;
      position: relative;
    }
  
    #map {
      width: 100%;
      height: 100%;
    }
  
    /* Map Controls */
    .map-controls {
      position: absolute;
      top: 20px;
      right: 20px;
      z-index: 100;
      display: flex;
      flex-direction: column;
      gap: 0.5rem;
    }
  
    .map-control-btn {
      background: rgba(0, 0, 0, 0.8);
      color: #fff;
      border: 1px solid #333;
      padding: 0.8rem;
      border-radius: 8px;
      cursor: pointer;
      font-size: 1rem;
      transition: all 0.3s ease;
    }
  
    .map-control-btn:hover {
      background: #0EA5E9;
      border-color: #0EA5E9;
    }
  
    /* Search Bar */
    .search-bar {
      position: absolute;
      top: 20px;
      left: 20px;
      z-index: 100;
      background: rgba(0, 0, 0, 0.9);
      padding: 1rem;
      border-radius: 12px;
      border: 1px solid #333;
      display: flex;
      gap: 1rem;
      align-items: center;
    }
  
    .search-input {
      background: #222;
      border: 1px solid #444;
      color: #fff;
      padding: 0.7rem 1rem;
      border-radius: 8px;
      font-size: 0.9rem;
      width: 200px;
    }
  
    .search-input::placeholder {
      color: #666;
    }
  
    .search-btn {
      background: #0EA5E9;
      color: #fff;
      border: none;
      padding: 0.7rem 1.2rem;
      border-radius: 8px;
      cursor: pointer;
      font-weight: bold;
      transition: background 0.3s ease;
    }
  
    .search-btn:hover {
      background: #0284c7;
    }
  
    /* Loading Animation */
    .loading {
      display: flex;
      justify-content: center;
      align-items: center;
      height: 200px;
      color: #666;
    }
  
    .spinner {
      width: 30px;
      height: 30px;
      border: 3px solid #333;
      border-top: 3px solid #0EA5E9;
      border-radius: 50%;
      animation: spin 1s linear infinite;
    }
  
    @keyframes spin {
      0% { transform: rotate(0deg); }
      100% { transform: rotate(360deg); }
    }
  
    /* Custom Mapbox Popup */
    :global(.mapboxgl-popup-content) {
      background: #1a1a1a !important;
      border: 1px solid #333 !important;
      border-radius: 12px !important;
      color: #fff !important;
      padding: 0 !important;
      width: 280px !important;
    }
  
    :global(.mapboxgl-popup-tip) {
      border-top-color: #1a1a1a !important;
    }
  
    .popup-content {
      padding: 1rem;
    }
  
    .popup-image {
      width: 100%;
      height: 120px;
      object-fit: cover;
      border-radius: 8px 8px 0 0;
    }
  
    .popup-title {
      font-size: 1rem;
      font-weight: bold;
      margin: 0.5rem 0 0.3rem 0;
      color: #fff;
    }
  
    .popup-price {
      color: #0EA5E9;
      font-weight: bold;
      font-size: 1.1rem;
    }
  
    .popup-amenities {
      display: flex;
      gap: 0.8rem;
      margin: 0.5rem 0;
      font-size: 0.8rem;
      color: #ccc;
    }
  
    /* Responsive */
    @media (max-width: 1200px) {
      .sidebar {
        width: 380px;
      }
      
      .search-input {
        width: 180px;
      }
    }
  
    @media (max-width: 1024px) {
      .sidebar {
        width: 350px;
      }
      
      .search-input {
        width: 160px;
      }
      
      .filter-tab {
        padding: 0.8rem;
        font-size: 0.8rem;
      }
      
      .filter-tab-icon {
        font-size: 1rem;
      }
    }
  
    @media (max-width: 768px) {
      .main-container {
        flex-direction: column;
        height: auto;
        min-height: calc(100vh - 80px);
      }
      
      .sidebar {
        width: 100%;
        height: 60vh;
        order: 2;
        border-right: none;
        border-top: 1px solid #333;
      }
      
      .map-container {
        height: 40vh;
        order: 1;
      }
  
      .search-bar {
        position: relative;
        top: 0;
        left: 0;
        margin: 0.5rem;
        width: calc(100% - 1rem);
        padding: 0.8rem;
      }
  
      .search-input {
        width: 140px;
        font-size: 0.8rem;
      }
      
      .search-btn {
        padding: 0.6rem 1rem;
        font-size: 0.9rem;
      }
  
      .map-controls {
        top: 10px;
        right: 10px;
        gap: 0.3rem;
      }
  
      .map-control-btn {
        padding: 0.6rem;
        font-size: 0.9rem;
      }
      
      .card-image {
        height: 80px;
      }
      
      .filter-tab {
        padding: 0.7rem 0.5rem;
        font-size: 0.75rem;
      }
      
      .filter-tab-icon {
        width: 1.2rem;
        height: 1.2rem;
      }
      
      .accommodation-list {
        padding: 0.8rem;
      }
      
      .card-content {
        padding: 0.8rem;
      }
      
      .card-amenities {
        gap: 0.8rem;
      }
      
      .amenity {
        font-size: 0.75rem;
      }
    }
  
    @media (max-width: 480px) {
      .map-section {
        margin-top: 0;
      }
      
      .sidebar {
        height: 55vh;
      }
      
      .map-container {
        height: 45vh;
        display: block !important;
      }
  
      #map {
        display: block !important;
        width: 100% !important;
        height: 100% !important;
      }
  
      .search-bar {
        position: absolute;
        top: 5px;
        left: 5px;
        width: calc(100% - 80px);
        padding: 0.6rem;
        margin: 0;
        z-index: 100;
      }
  
      .search-input {
        width: 100px;
        font-size: 0.8rem;
        padding: 0.5rem;
      }
      
      .search-btn {
        padding: 0.5rem 0.8rem;
        font-size: 0.8rem;
      }
  
      .map-controls {
        flex-direction: column;
        top: 5px;
        right: 5px;
        gap: 0.3rem;
      }
  
      .map-control-btn {
        padding: 0.5rem;
        font-size: 0.8rem;
      }
      
      .filter-tabs {
        flex-wrap: nowrap;
        overflow-x: auto;
        scrollbar-width: none;
        -ms-overflow-style: none;
      }
      
      .filter-tabs::-webkit-scrollbar {
        display: none;
      }
      
      .filter-tab {
        min-width: 80px;
        padding: 0.6rem 0.4rem;
        font-size: 0.7rem;
        flex-shrink: 0;
      }
      
      .filter-tab-icon {
        width: 1rem;
        height: 1rem;
        margin-bottom: 0.2rem;
      }
      
      .accommodation-list {
        padding: 0.5rem;
      }
      
      .accommodation-card {
        margin-bottom: 0.8rem;
      }
      
      .card-image {
        height: 70px;
      }
      
      .card-content {
        padding: 0.6rem;
      }
      
      .card-title {
        font-size: 1rem;
      }
      
      .card-location {
        font-size: 0.8rem;
        margin-bottom: 0.6rem;
      }
      
      .card-amenities {
        gap: 0.5rem;
        margin-bottom: 0.8rem;
      }
      
      .amenity {
        font-size: 0.7rem;
      }
      
      .price {
        font-size: 1.1rem;
      }
      
      .reserve-btn {
        padding: 0.6rem 1.2rem;
        font-size: 0.8rem;
      }
    }
  
    @media (max-width: 320px) {
      .search-bar {
        margin: 0.2rem;
        width: calc(100% - 0.4rem);
        padding: 0.5rem;
      }
      
      .filter-tab {
        padding: 0.5rem 0.2rem;
        font-size: 0.65rem;
      }
      
      .accommodation-list {
        padding: 0.3rem;
      }
      
      .card-content {
        padding: 0.5rem;
      }
      
      .card-title {
        font-size: 0.9rem;
      }
      
      .card-rating {
        padding: 0.2rem 0.4rem;
        font-size: 0.7rem;
      }
      
      .amenity {
        font-size: 0.65rem;
        gap: 0.2rem;
      }
      
      .reserve-btn {
        padding: 0.5rem 1rem;
        font-size: 0.75rem;
      }
    }
  </style>
  
  <script is:inline>
    // @ts-nocheck
    // FORCED LOCAL DATA - NO EXTERNAL IMPORTS
    const SALINAS_DATA = {
      hoteles: [
        {
          id: 1,
          name: "Hotel Salinas",
          price: 85,
          image: "https://images.unsplash.com/photo-1571896349842-33c89424de2d?ixlib=rb-4.0.3&auto=format&fit=crop&w=400&q=60",
          amenities: [
            { icon: "üë•" },
            { icon: "üì∂" },
            { icon: "üèä‚Äç‚ôÇÔ∏è" },
            { icon: "üÖøÔ∏è" }
          ],
          coordinates: [-80.9553, -2.2108]
        },
        {
          id: 2,
          name: "Hotel Miramar",
          price: 65,
          image: "https://images.unsplash.com/photo-1582719478250-c89cae4dc85b?ixlib=rb-4.0.3&auto=format&fit=crop&w=400&q=60",
          amenities: [
            { icon: "üë•" },
            { icon: "üì∂" },
            { icon: "üåÖ" },
            { icon: "üç≥" }
          ],
          coordinates: [-80.9563, -2.2118]
        }
      ],
      departamentos: [
        {
          id: 3,
          name: "Depto Vista Mar",
          price: 45,
          image: "https://images.unsplash.com/photo-1502672260266-1c1ef2d93688?ixlib=rb-4.0.3&auto=format&fit=crop&w=400&q=60",
          amenities: [
            { icon: "üë•" },
            { icon: "üì∂" },
            { icon: "üç≥" },
            { icon: "üåÖ" }
          ],
          coordinates: [-80.9548, -2.2103]
        }
      ],
      hostales: [
        {
          id: 4,
          name: "Hostal Surfero",
          price: 18,
          image: "https://images.unsplash.com/photo-1555854877-bab0e564b8d5?ixlib=rb-4.0.3&auto=format&fit=crop&w=400&q=60",
          amenities: [
            { icon: "üë•" },
            { icon: "üì∂" },
            { icon: "üèÑ‚Äç‚ôÇÔ∏è" },
            { icon: "üß∫" }
          ],
          coordinates: [-80.9058, -2.2267]
        }
      ]
    };
  
    let map;
    let markers = [];
    let currentCategory = 'hoteles';
  
    // Get SVG icon for amenity - SIMPLIFIED
    function getAmenityIcon(iconType) {
      const iconMap = {
        'üë•': `<svg viewBox="0 0 24 24" fill="currentColor" width="12" height="12">
          <path d="M16 7a4 4 0 1 1-8 0 4 4 0 0 1 8 0ZM12 14a7 7 0 0 0-7 7h14a7 7 0 0 0-7-7Z"/>
        </svg>`,
        'üì∂': `<svg viewBox="0 0 24 24" fill="currentColor" width="12" height="12">
          <path d="M1 9l2 2c2.88-2.88 7.12-2.88 10 0l2-2C9.12 3.12 6.88 3.12 1 9zm8 8l3 3 3-3c-1.65-1.65-4.34-1.65-6 0zm-4-4l2 2c1.23-1.23 3.77-1.23 5 0l2-2C9.46 8.46 6.54 8.46 5 13z"/>
        </svg>`,
        'üèä‚Äç‚ôÇÔ∏è': `<svg viewBox="0 0 24 24" fill="currentColor" width="12" height="12">
          <path d="M6 14c1.1 0 2-.9 2-2s-.9-2-2-2-2 .9-2 2 .9 2 2 2zm4.5-7C9.57 7 9 7.57 9 8.5S9.57 10 10.5 10s1.5-.57 1.5-1.5S11.43 7 10.5 7zM19 6H5C3.9 6 3 6.9 3 8v8c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V8c0-1.1-.9-2-2-2zm0 10H5V8h14v8z"/>
        </svg>`,
        'üÖøÔ∏è': `<svg viewBox="0 0 24 24" fill="currentColor" width="12" height="12">
          <path d="M13 4H6C4.9 4 4 4.9 4 6v12c0 1.1.9 2 2 2h12c1.1 0 2-.9 2-2V9l-5-5z"/>
        </svg>`,
        'üåÖ': `<svg viewBox="0 0 24 24" fill="currentColor" width="12" height="12">
          <path d="M6.76 4.84l-1.8-1.79-1.41 1.41 1.79 1.79 1.42-1.41zM4 10.5H1v2h3v-2zm9-9.95h-2V3.5h2V.55zm7.45 3.91l-1.41-1.41-1.79 1.79 1.41 1.41 1.79-1.79zm-3.21 13.7l1.79 1.8 1.41-1.41-1.8-1.79-1.4 1.4z"/>
        </svg>`,
        'üç≥': `<svg viewBox="0 0 24 24" fill="currentColor" width="12" height="12">
          <circle cx="9" cy="9" r="8" stroke="currentColor" stroke-width="2" fill="none"/>
          <path d="M16 16l4-4"/>
        </svg>`,
        'üèÑ‚Äç‚ôÇÔ∏è': `<svg viewBox="0 0 24 24" fill="currentColor" width="12" height="12">
          <path d="M21 6c-1.1 0-2 .9-2 2v4c0 1.1.9 2 2 2s2-.9 2-2V8c0-1.1-.9-2-2-2zM7 6c-1.1 0-2 .9-2 2v8c0 1.1.9 2 2 2s2-.9 2-2V8c0-1.1-.9-2-2-2z"/>
        </svg>`,
        'üß∫': `<svg viewBox="0 0 24 24" fill="currentColor" width="12" height="12">
          <path d="M17 10.5V7c0-.55-.45-1-1-1H4c-.55 0-1 .45-1 1v3.5c0 .28.22.5.5.5s.5-.22.5-.5V8h10v2.5c0 .28.22.5.5.5s.5-.22.5-.5z"/>
        </svg>`
      };
      return iconMap[iconType] || `<svg viewBox="0 0 24 24" fill="currentColor" width="12" height="12"><circle cx="12" cy="12" r="4"/></svg>`;
    }
  
    // Initialize when page loads
    document.addEventListener('DOMContentLoaded', function() {
      // Wait a bit for mapboxgl to be available
      setTimeout(() => {
        if (typeof mapboxgl !== 'undefined') {
          initMap();
        } else {
          console.error('Mapbox GL JS no se carg√≥ correctamente');
          // Retry after additional delay
          setTimeout(() => {
            if (typeof mapboxgl !== 'undefined') {
              initMap();
            } else {
              console.error('Mapbox GL JS fall√≥ al cargar despu√©s de varios intentos');
              // Show fallback message
              const mapContainer = document.getElementById('map');
              if (mapContainer) {
                mapContainer.innerHTML = '<div style="display:flex;align-items:center;justify-content:center;height:100%;color:#666;">Cargando mapa...</div>';
              }
            }
          }, 2000);
        }
      }, 1000);
    });
  
    // Initialize map
    function initMap() {
      // Mapbox Access Token
      mapboxgl.accessToken = 'pk.eyJ1IjoiZGVubnkyNyIsImEiOiJjbWZrbzMwYXkwMGJwMmxxMTFmdmM1cmh2In0.BCg8zmi25CEl_QURSA6A0w';
      
      const mapContainer = document.getElementById('map');
      if (!mapContainer) {
        console.error('Map container not found');
        return;
      }
      
      map = new mapboxgl.Map({
        container: 'map',
        style: 'mapbox://styles/mapbox/dark-v11',
        center: [-80.9553, -2.2108], // Salinas, Ecuador
        zoom: 12,
        attributionControl: false,
        accessibilityText: false
      });
  
      // Remove accessibility warnings
      map.on('load', () => {
        // Hide all mapbox popups that might show text
        const popups = document.querySelectorAll('.mapboxgl-popup');
        popups.forEach(popup => {
          popup.style.display = 'none';
        });
        
        loadAccommodations('hoteles');
        setupEventListeners();
        
        // Force resize for mobile
        setTimeout(() => {
          map.resize();
        }, 500);
      });
  
      // Add resize listener for responsive behavior
      window.addEventListener('resize', () => {
        if (map) {
          setTimeout(() => {
            map.resize();
          }, 100);
        }
      });
    }
  
    // Setup event listeners
    function setupEventListeners() {
      // Tab switching
      document.querySelectorAll('.filter-tab').forEach(tab => {
        tab.addEventListener('click', () => {
          document.querySelectorAll('.filter-tab').forEach(t => t.classList.remove('active'));
          tab.classList.add('active');
          
          const category = tab.dataset?.category;
          if (category) {
            loadAccommodations(category);
          }
        });
      });
  
      // Map controls
      const toggleBtn = document.getElementById('toggle-style');
      const centerBtn = document.getElementById('center-map');
      const searchBtn = document.querySelector('.search-btn');
      
      if (toggleBtn) toggleBtn.addEventListener('click', toggleMapStyle);
      if (centerBtn) centerBtn.addEventListener('click', centerMap);
      if (searchBtn) {
        searchBtn.addEventListener('click', () => {
          const searchInput = document.querySelector('.search-input');
          const query = searchInput?.value;
          if (query) {
            console.log('Searching for:', query);
          }
        });
      }
    }
  
    // Load accommodations
    function loadAccommodations(category) {
      currentCategory = category;
      const accommodations = SALINAS_DATA[category] || [];
      
      updateAccommodationList(accommodations);
      updateMapMarkers(accommodations);
    }
  
    // Update accommodation list in sidebar
    function updateAccommodationList(accommodations) {
      const listContainer = document.getElementById('accommodation-list');
      
      if (!listContainer) return;
      
      if (accommodations.length === 0) {
        listContainer.innerHTML = '<div class="loading">No hay alojamientos disponibles</div>';
        return;
      }
  
      listContainer.innerHTML = accommodations.map(accommodation => `
        <div class="accommodation-card" onclick="selectAccommodation(${accommodation.id})">
          <img src="${accommodation.image}" alt="${accommodation.name}" class="card-image">
          <div class="card-content">
            <div class="card-header">
              <h3 class="card-title">${accommodation.name}</h3>
              <div class="card-rating">${accommodation.rating}</div>
            </div>
            <div class="card-location">
              <span>üìç</span>
              ${accommodation.location}
            </div>
            <div class="card-amenities">
              ${accommodation.amenities.map(amenity => `
                <div class="amenity">
                  <span class="amenity-icon">${getAmenityIcon(amenity.icon)}</span>
                  <span>${amenity.text}</span>
                </div>
              `).join('')}
            </div>
            <div class="card-price">
              <div>
                <div class="price">${accommodation.price}</div>
                <div class="price-per-night">por noche</div>
              </div>
              <a href="/hotel-details?id=${accommodation.id}" class="reserve-btn" style="background: linear-gradient(45deg, #FF6B35, #FF8E53); color: white; text-decoration: none;">Reservar</a>
            </div>
          </div>
        </div>
      `).join('');
    }
  
    // Update map markers
    function updateMapMarkers(accommodations) {
      markers.forEach(marker => marker.remove());
      markers = [];
  
      accommodations.forEach(accommodation => {
        const markerColor = currentCategory === 'hoteles' ? '#FF6B35' : 
                          currentCategory === 'departamentos' ? '#0EA5E9' : '#10B981';
  
        const marker = new mapboxgl.Marker({ color: markerColor })
          .setLngLat(accommodation.coordinates)
          .setPopup(
            new mapboxgl.Popup({ offset: 25 })
              .setHTML(`
                <div class="popup-content">
                  <img src="${accommodation.image}" alt="${accommodation.name}" class="popup-image">
                  <h3 class="popup-title">${accommodation.name}</h3>
                  <div class="popup-amenities">
                    ${accommodation.amenities.slice(0, 2).map(amenity => `
                      <span>${getAmenityIcon(amenity.icon)} ${amenity.text}</span>
                    `).join('')}
                  </div>
                  <div class="popup-price">${accommodation.price}/noche</div>
                </div>
              `)
          )
          .addTo(map);
  
        markers.push(marker);
      });
  
      if (accommodations.length > 0) {
        const bounds = new mapboxgl.LngLatBounds();
        accommodations.forEach(accommodation => {
          bounds.extend(accommodation.coordinates);
        });
        map.fitBounds(bounds, { padding: 50 });
      }
    }
  
    // Select accommodation
    function selectAccommodation(id, autoFocus = false) {
      const allAccommodations = [...SALINAS_DATA.hoteles, ...SALINAS_DATA.departamentos, ...SALINAS_DATA.hostales];
      const accommodation = allAccommodations.find(acc => acc.id === id);
      
      if (accommodation) {
        // Auto-scroll to map section if called from card click
        if (autoFocus) {
          document.querySelector('#mapa').scrollIntoView({
            behavior: 'smooth',
            block: 'start'
          });
          
          // Wait for scroll to complete, then focus map
          setTimeout(() => {
            map.flyTo({
              center: accommodation.coordinates,
              zoom: 16,
              duration: 2500,
              essential: true
            });
          }, 800);
        } else {
          map.flyTo({
            center: accommodation.coordinates,
            zoom: 16,
            duration: 2000
          });
        }
        
        // Show popup after animation
        setTimeout(() => {
          const marker = markers.find(m => 
            Math.abs(m.getLngLat().lng - accommodation.coordinates[0]) < 0.001 && 
            Math.abs(m.getLngLat().lat - accommodation.coordinates[1]) < 0.001
          );
          if (marker && marker.getPopup()) {
            marker.getPopup().addTo(map);
          }
        }, autoFocus ? 3000 : 2000);
      }
    }
  
    // Map controls
    function toggleMapStyle() {
      const currentStyle = map.getStyle().name;
      const newStyle = currentStyle === 'Mapbox Dark' ? 'mapbox://styles/mapbox/streets-v12' : 'mapbox://styles/mapbox/dark-v11';
      map.setStyle(newStyle);
    }
  
    function centerMap() {
      const accommodations = SALINAS_DATA[currentCategory] || [];
      if (accommodations.length > 0) {
        const bounds = new mapboxgl.LngLatBounds();
        accommodations.forEach(accommodation => {
          bounds.extend(accommodation.coordinates);
        });
        map.fitBounds(bounds, { padding: 50 });
      }
    }
  
    // Get directions function
    function getDirections(lng, lat) {
      // Open Google Maps with directions
      const googleMapsUrl = `https://www.google.com/maps/dir/?api=1&destination=${lat},${lng}&travelmode=driving`;
      window.open(googleMapsUrl, '_blank');
    }
  
    // Make functions global so they can be called from HTML
    window.selectAccommodation = selectAccommodation;
    window.toggleMapStyle = toggleMapStyle;
    window.centerMap = centerMap;
    window.getDirections = getDirections;